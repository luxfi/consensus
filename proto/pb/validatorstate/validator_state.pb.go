// Copyright (C) 2019-2024, Lux Industries Inc. All rights reserved.
// See the file LICENSE for licensing terms.

// Code generated by protoc-gen-go. DO NOT EDIT.

package validatorstate

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetMinimumHeightRequest is the request for GetMinimumHeight
type GetMinimumHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMinimumHeightRequest) Reset() {
	*x = GetMinimumHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinimumHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinimumHeightRequest) ProtoMessage() {}

func (x *GetMinimumHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinimumHeightRequest.ProtoReflect.Descriptor instead.
func (*GetMinimumHeightRequest) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{0}
}

// GetMinimumHeightResponse is the response for GetMinimumHeight
type GetMinimumHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetMinimumHeightResponse) Reset() {
	*x = GetMinimumHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinimumHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinimumHeightResponse) ProtoMessage() {}

func (x *GetMinimumHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinimumHeightResponse.ProtoReflect.Descriptor instead.
func (*GetMinimumHeightResponse) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{1}
}

func (x *GetMinimumHeightResponse) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// GetCurrentHeightRequest is the request for GetCurrentHeight
type GetCurrentHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentHeightRequest) Reset() {
	*x = GetCurrentHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentHeightRequest) ProtoMessage() {}

func (x *GetCurrentHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentHeightRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentHeightRequest) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{2}
}

// GetCurrentHeightResponse is the response for GetCurrentHeight
type GetCurrentHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetCurrentHeightResponse) Reset() {
	*x = GetCurrentHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentHeightResponse) ProtoMessage() {}

func (x *GetCurrentHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentHeightResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentHeightResponse) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{3}
}

func (x *GetCurrentHeightResponse) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// GetSubnetIDRequest is the request for GetSubnetID
type GetSubnetIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId []byte `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *GetSubnetIDRequest) Reset() {
	*x = GetSubnetIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubnetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetIDRequest) ProtoMessage() {}

func (x *GetSubnetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetIDRequest.ProtoReflect.Descriptor instead.
func (*GetSubnetIDRequest) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubnetIDRequest) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

// GetSubnetIDResponse is the response for GetSubnetID
type GetSubnetIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId []byte `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
}

func (x *GetSubnetIDResponse) Reset() {
	*x = GetSubnetIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubnetIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetIDResponse) ProtoMessage() {}

func (x *GetSubnetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetIDResponse.ProtoReflect.Descriptor instead.
func (*GetSubnetIDResponse) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubnetIDResponse) GetSubnetId() []byte {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

// GetValidatorSetRequest is the request for GetValidatorSet
type GetValidatorSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height    uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	SubnetId  []byte `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
}

func (x *GetValidatorSetRequest) Reset() {
	*x = GetValidatorSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValidatorSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorSetRequest) ProtoMessage() {}

func (x *GetValidatorSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorSetRequest.ProtoReflect.Descriptor instead.
func (*GetValidatorSetRequest) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{6}
}

func (x *GetValidatorSetRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetValidatorSetRequest) GetSubnetId() []byte {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

// Validator represents a validator in the set
type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId        []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Weight        uint64 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	PublicKey     []byte `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	StartTime     uint64 `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	IsActive      bool   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	ValidationId  []byte `protobuf:"bytes,6,opt,name=validation_id,json=validationId,proto3" json:"validation_id,omitempty"`
	MinNonce      uint64 `protobuf:"varint,7,opt,name=min_nonce,json=minNonce,proto3" json:"min_nonce,omitempty"`
	IsL1Validator bool   `protobuf:"varint,8,opt,name=is_l1_validator,json=isL1Validator,proto3" json:"is_l1_validator,omitempty"`
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{7}
}

func (x *Validator) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *Validator) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Validator) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Validator) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Validator) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Validator) GetValidationId() []byte {
	if x != nil {
		return x.ValidationId
	}
	return nil
}

func (x *Validator) GetMinNonce() uint64 {
	if x != nil {
		return x.MinNonce
	}
	return 0
}

func (x *Validator) GetIsL1Validator() bool {
	if x != nil {
		return x.IsL1Validator
	}
	return false
}

// GetValidatorSetResponse is the response for GetValidatorSet
type GetValidatorSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validators []*Validator `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
}

func (x *GetValidatorSetResponse) Reset() {
	*x = GetValidatorSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValidatorSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorSetResponse) ProtoMessage() {}

func (x *GetValidatorSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorSetResponse.ProtoReflect.Descriptor instead.
func (*GetValidatorSetResponse) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{8}
}

func (x *GetValidatorSetResponse) GetValidators() []*Validator {
	if x != nil {
		return x.Validators
	}
	return nil
}

// GetCurrentValidatorSetRequest is the request for GetCurrentValidatorSet
type GetCurrentValidatorSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId []byte `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
}

func (x *GetCurrentValidatorSetRequest) Reset() {
	*x = GetCurrentValidatorSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentValidatorSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentValidatorSetRequest) ProtoMessage() {}

func (x *GetCurrentValidatorSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentValidatorSetRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentValidatorSetRequest) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{9}
}

func (x *GetCurrentValidatorSetRequest) GetSubnetId() []byte {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

// GetCurrentValidatorSetResponse is the response for GetCurrentValidatorSet
type GetCurrentValidatorSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validators    []*Validator `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
	CurrentHeight uint64       `protobuf:"varint,2,opt,name=current_height,json=currentHeight,proto3" json:"current_height,omitempty"`
}

func (x *GetCurrentValidatorSetResponse) Reset() {
	*x = GetCurrentValidatorSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_state_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentValidatorSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentValidatorSetResponse) ProtoMessage() {}

func (x *GetCurrentValidatorSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_validator_state_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentValidatorSetResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentValidatorSetResponse) Descriptor() ([]byte, []int) {
	return file_validator_state_proto_rawDescGZIP(), []int{10}
}

func (x *GetCurrentValidatorSetResponse) GetValidators() []*Validator {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *GetCurrentValidatorSetResponse) GetCurrentHeight() uint64 {
	if x != nil {
		return x.CurrentHeight
	}
	return 0
}

var File_validator_state_proto protoreflect.FileDescriptor

var file_validator_state_proto_rawDesc = []byte{}

var (
	file_validator_state_proto_rawDescOnce sync.Once
	file_validator_state_proto_rawDescData = file_validator_state_proto_rawDesc
)

func file_validator_state_proto_rawDescGZIP() []byte {
	file_validator_state_proto_rawDescOnce.Do(func() {
		file_validator_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_validator_state_proto_rawDescData)
	})
	return file_validator_state_proto_rawDescData
}

var file_validator_state_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_validator_state_proto_goTypes = []interface{}{
	(*GetMinimumHeightRequest)(nil),       // 0: validatorstate.GetMinimumHeightRequest
	(*GetMinimumHeightResponse)(nil),      // 1: validatorstate.GetMinimumHeightResponse
	(*GetCurrentHeightRequest)(nil),       // 2: validatorstate.GetCurrentHeightRequest
	(*GetCurrentHeightResponse)(nil),      // 3: validatorstate.GetCurrentHeightResponse
	(*GetSubnetIDRequest)(nil),            // 4: validatorstate.GetSubnetIDRequest
	(*GetSubnetIDResponse)(nil),           // 5: validatorstate.GetSubnetIDResponse
	(*GetValidatorSetRequest)(nil),        // 6: validatorstate.GetValidatorSetRequest
	(*Validator)(nil),                     // 7: validatorstate.Validator
	(*GetValidatorSetResponse)(nil),       // 8: validatorstate.GetValidatorSetResponse
	(*GetCurrentValidatorSetRequest)(nil), // 9: validatorstate.GetCurrentValidatorSetRequest
	(*GetCurrentValidatorSetResponse)(nil),// 10: validatorstate.GetCurrentValidatorSetResponse
}
var file_validator_state_proto_depIdxs = []int32{
	7,  // 0: validatorstate.GetValidatorSetResponse.validators:type_name -> validatorstate.Validator
	7,  // 1: validatorstate.GetCurrentValidatorSetResponse.validators:type_name -> validatorstate.Validator
	0,  // 2: validatorstate.ValidatorState.GetMinimumHeight:input_type -> validatorstate.GetMinimumHeightRequest
	2,  // 3: validatorstate.ValidatorState.GetCurrentHeight:input_type -> validatorstate.GetCurrentHeightRequest
	4,  // 4: validatorstate.ValidatorState.GetSubnetID:input_type -> validatorstate.GetSubnetIDRequest
	6,  // 5: validatorstate.ValidatorState.GetValidatorSet:input_type -> validatorstate.GetValidatorSetRequest
	9,  // 6: validatorstate.ValidatorState.GetCurrentValidatorSet:input_type -> validatorstate.GetCurrentValidatorSetRequest
	1,  // 7: validatorstate.ValidatorState.GetMinimumHeight:output_type -> validatorstate.GetMinimumHeightResponse
	3,  // 8: validatorstate.ValidatorState.GetCurrentHeight:output_type -> validatorstate.GetCurrentHeightResponse
	5,  // 9: validatorstate.ValidatorState.GetSubnetID:output_type -> validatorstate.GetSubnetIDResponse
	8,  // 10: validatorstate.ValidatorState.GetValidatorSet:output_type -> validatorstate.GetValidatorSetResponse
	10, // 11: validatorstate.ValidatorState.GetCurrentValidatorSet:output_type -> validatorstate.GetCurrentValidatorSetResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_validator_state_proto_init() }
func file_validator_state_proto_init() {
	if File_validator_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		// Message type initialization code omitted for brevity
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_validator_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_validator_state_proto_goTypes,
		DependencyIndexes: file_validator_state_proto_depIdxs,
		MessageInfos:      file_validator_state_proto_msgTypes,
	}.Build()
	File_validator_state_proto = out.File
	file_validator_state_proto_rawDesc = nil
	file_validator_state_proto_goTypes = nil
	file_validator_state_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface
var _ codes.Code
var _ status.Status

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ValidatorStateClient is the client API for ValidatorState service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ValidatorStateClient interface {
	GetMinimumHeight(ctx context.Context, in *GetMinimumHeightRequest, opts ...grpc.CallOption) (*GetMinimumHeightResponse, error)
	GetCurrentHeight(ctx context.Context, in *GetCurrentHeightRequest, opts ...grpc.CallOption) (*GetCurrentHeightResponse, error)
	GetSubnetID(ctx context.Context, in *GetSubnetIDRequest, opts ...grpc.CallOption) (*GetSubnetIDResponse, error)
	GetValidatorSet(ctx context.Context, in *GetValidatorSetRequest, opts ...grpc.CallOption) (*GetValidatorSetResponse, error)
	GetCurrentValidatorSet(ctx context.Context, in *GetCurrentValidatorSetRequest, opts ...grpc.CallOption) (*GetCurrentValidatorSetResponse, error)
}

type validatorStateClient struct {
	cc grpc.ClientConnInterface
}

func NewValidatorStateClient(cc grpc.ClientConnInterface) ValidatorStateClient {
	return &validatorStateClient{cc}
}

func (c *validatorStateClient) GetMinimumHeight(ctx context.Context, in *GetMinimumHeightRequest, opts ...grpc.CallOption) (*GetMinimumHeightResponse, error) {
	out := new(GetMinimumHeightResponse)
	err := c.cc.Invoke(ctx, "/validatorstate.ValidatorState/GetMinimumHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorStateClient) GetCurrentHeight(ctx context.Context, in *GetCurrentHeightRequest, opts ...grpc.CallOption) (*GetCurrentHeightResponse, error) {
	out := new(GetCurrentHeightResponse)
	err := c.cc.Invoke(ctx, "/validatorstate.ValidatorState/GetCurrentHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorStateClient) GetSubnetID(ctx context.Context, in *GetSubnetIDRequest, opts ...grpc.CallOption) (*GetSubnetIDResponse, error) {
	out := new(GetSubnetIDResponse)
	err := c.cc.Invoke(ctx, "/validatorstate.ValidatorState/GetSubnetID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorStateClient) GetValidatorSet(ctx context.Context, in *GetValidatorSetRequest, opts ...grpc.CallOption) (*GetValidatorSetResponse, error) {
	out := new(GetValidatorSetResponse)
	err := c.cc.Invoke(ctx, "/validatorstate.ValidatorState/GetValidatorSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorStateClient) GetCurrentValidatorSet(ctx context.Context, in *GetCurrentValidatorSetRequest, opts ...grpc.CallOption) (*GetCurrentValidatorSetResponse, error) {
	out := new(GetCurrentValidatorSetResponse)
	err := c.cc.Invoke(ctx, "/validatorstate.ValidatorState/GetCurrentValidatorSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ValidatorStateServer is the server API for ValidatorState service.
// All implementations must embed UnimplementedValidatorStateServer
// for forward compatibility
type ValidatorStateServer interface {
	GetMinimumHeight(context.Context, *GetMinimumHeightRequest) (*GetMinimumHeightResponse, error)
	GetCurrentHeight(context.Context, *GetCurrentHeightRequest) (*GetCurrentHeightResponse, error)
	GetSubnetID(context.Context, *GetSubnetIDRequest) (*GetSubnetIDResponse, error)
	GetValidatorSet(context.Context, *GetValidatorSetRequest) (*GetValidatorSetResponse, error)
	GetCurrentValidatorSet(context.Context, *GetCurrentValidatorSetRequest) (*GetCurrentValidatorSetResponse, error)
	mustEmbedUnimplementedValidatorStateServer()
}

// UnimplementedValidatorStateServer must be embedded to have forward compatible implementations.
type UnimplementedValidatorStateServer struct {
}

func (UnimplementedValidatorStateServer) GetMinimumHeight(context.Context, *GetMinimumHeightRequest) (*GetMinimumHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMinimumHeight not implemented")
}
func (UnimplementedValidatorStateServer) GetCurrentHeight(context.Context, *GetCurrentHeightRequest) (*GetCurrentHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentHeight not implemented")
}
func (UnimplementedValidatorStateServer) GetSubnetID(context.Context, *GetSubnetIDRequest) (*GetSubnetIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubnetID not implemented")
}
func (UnimplementedValidatorStateServer) GetValidatorSet(context.Context, *GetValidatorSetRequest) (*GetValidatorSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidatorSet not implemented")
}
func (UnimplementedValidatorStateServer) GetCurrentValidatorSet(context.Context, *GetCurrentValidatorSetRequest) (*GetCurrentValidatorSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentValidatorSet not implemented")
}
func (UnimplementedValidatorStateServer) mustEmbedUnimplementedValidatorStateServer() {}

// UnsafeValidatorStateServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ValidatorStateServer will
// result in compilation errors.
type UnsafeValidatorStateServer interface {
	mustEmbedUnimplementedValidatorStateServer()
}

func RegisterValidatorStateServer(s grpc.ServiceRegistrar, srv ValidatorStateServer) {
	s.RegisterService(&ValidatorState_ServiceDesc, srv)
}

func _ValidatorState_GetMinimumHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMinimumHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorStateServer).GetMinimumHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/validatorstate.ValidatorState/GetMinimumHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorStateServer).GetMinimumHeight(ctx, req.(*GetMinimumHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorState_GetCurrentHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorStateServer).GetCurrentHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/validatorstate.ValidatorState/GetCurrentHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorStateServer).GetCurrentHeight(ctx, req.(*GetCurrentHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorState_GetSubnetID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubnetIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorStateServer).GetSubnetID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/validatorstate.ValidatorState/GetSubnetID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorStateServer).GetSubnetID(ctx, req.(*GetSubnetIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorState_GetValidatorSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValidatorSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorStateServer).GetValidatorSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/validatorstate.ValidatorState/GetValidatorSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorStateServer).GetValidatorSet(ctx, req.(*GetValidatorSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorState_GetCurrentValidatorSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentValidatorSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorStateServer).GetCurrentValidatorSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/validatorstate.ValidatorState/GetCurrentValidatorSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorStateServer).GetCurrentValidatorSet(ctx, req.(*GetCurrentValidatorSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ValidatorState_ServiceDesc is the grpc.ServiceDesc for ValidatorState service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ValidatorState_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "validatorstate.ValidatorState",
	HandlerType: (*ValidatorStateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMinimumHeight",
			Handler:    _ValidatorState_GetMinimumHeight_Handler,
		},
		{
			MethodName: "GetCurrentHeight",
			Handler:    _ValidatorState_GetCurrentHeight_Handler,
		},
		{
			MethodName: "GetSubnetID",
			Handler:    _ValidatorState_GetSubnetID_Handler,
		},
		{
			MethodName: "GetValidatorSet",
			Handler:    _ValidatorState_GetValidatorSet_Handler,
		},
		{
			MethodName: "GetCurrentValidatorSet",
			Handler:    _ValidatorState_GetCurrentValidatorSet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "validator_state.proto",
}